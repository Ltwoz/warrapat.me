{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport rehypeAutolinkHeadings, {\n  type Options as AutolinkOptions,\n} from \"rehype-autolink-headings\";\nimport rehypePrettyCode, {\n  type Options as PrettyCodeOptions,\n} from \"rehype-pretty-code\";\nimport rehypeSlug from \"rehype-slug\";\nimport remarkGfm from \"remark-gfm\";\n\nexport const Project = defineDocumentType(() => ({\n  name: \"Project\",\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n    category: {\n      type: \"string\",\n      required: true\n    },\n    url: {\n      type: \"string\",\n      required: true,\n    },\n    date: {\n      type: \"string\",\n      required: true,\n    },\n    icon: {\n      type: \"string\",\n      required: true,\n    },\n    screenshot: {\n      type: \"string\",\n      required: true,\n    },\n    tags: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: true,\n    },\n  },\n  computedFields: {\n    slug: {\n      type: \"string\",\n      resolve: (doc) => `/${doc._raw.flattenedPath}`,\n    },\n    slugAsParams: {\n      type: \"string\",\n      resolve: (doc) => doc._raw.flattenedPath.split(\"/\").slice(1).join(\"/\"),\n    },\n  },\n}));\n\nexport default makeSource({\n  contentDirPath: \"./content\",\n  documentTypes: [Project],\n  mdx: {\n    remarkPlugins: [remarkGfm],\n    rehypePlugins: [\n      rehypeSlug,\n      [\n        rehypePrettyCode,\n        {\n          theme: \"github-dark\",\n          onVisitLine(node) {\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }];\n            }\n          },\n          onVisitHighlightedLine(node) {\n            node.properties.className?.push(\"line--highlighted\");\n          },\n          onVisitHighlightedChars(node) {\n            node.properties.className = [\"word--highlighted\"];\n          },\n        } satisfies Partial<PrettyCodeOptions>,\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"subheading-anchor\"],\n            ariaLabel: \"Link to section\",\n          },\n        } satisfies Partial<AutolinkOptions>,\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,4BAEA;AACP,OAAO,sBAEA;AACP,OAAO,gBAAgB;AACvB,OAAO,eAAe;AAEf,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,KAAK;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK,aAAa;AAAA,IAC9C;AAAA,IACA,cAAc;AAAA,MACZ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,IACvE;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACb;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,YAAY,MAAM;AAChB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAM;AAC3B,iBAAK,WAAW,WAAW,KAAK,mBAAmB;AAAA,UACrD;AAAA,UACA,wBAAwB,MAAM;AAC5B,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
